services:
  source:
    image: mysql
    environment:
      MYSQL_ROOT_PASSWORD: example
    ports:
      - 3306:3306
    volumes:
      - ./mysql_raw:/docker-entrypoint-initdb.d
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1 -u $$MYSQL_USER --password=$$MYSQL_PASSWORD
      interval: 30s
      timeout: 10s
      retries: 2
      start_period: 40s
    
  destination:
    image: postgres
    ports: 
      - 5432:5432
    environment:
      POSTGRES_PASSWORD: example
    volumes:
      - ./postgres_init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 30s
      timeout: 10s
      retries: 2
      start_period: 40s

  # replicator:
  #   build: 
  #     context: .
  #     dockerfile: Dockerfile_replica
  #   volumes:
  #     - ./replicadb:/home/replicadb/conf/
  #   depends_on:
  #     source:
  #       condition: service_healthy
  #     destination:
  #       condition: service_healthy
  #   # restart: always
  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
  
  # ge:
  #   platform: linux/amd64
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   volumes: 
  #     - ./ge_runner:/opt/great_expectations/ge_runner
  #     - ./great_expectation_stores:/opt/great_expectations/great_expectation_stores
  #   depends_on:
  #     source:
  #       condition: service_healthy
  #     destination:
  #       condition: service_healthy
  #   command: ge_runner/main.py
  # datacompy:
  #   platform: linux/amd64
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   volumes: 
  #     - ./datacompy_runner:/opt/great_expectations/ge_runner
  #   depends_on:
  #     source:
  #       condition: service_healthy
  #     destination:
  #       condition: service_healthy
  #   command: ge_runner/main.py
  #   # restart: always
  fault_test:
    platform: linux/amd64
    build:
      context: .
      dockerfile: Dockerfile
    volumes: 
      - ./fault_creator:/opt/great_expectations/ge_runner
      - ./datacompy_runner:/opt/great_expectations/ge_runner/datacompy_runner
      - ./ge_runner:/opt/great_expectations/ge_runner/ge_runner
      - ./great_expectation_stores:/opt/great_expectations/great_expectation_stores
    depends_on:
      source:
        condition: service_healthy
      destination:
        condition: service_healthy
        
    entrypoint: pytest
    environment:
      - PYTHONPATH=/opt/great_expectations/ge_runner
    # restart: always

    
  web:
    image: nginx
    volumes:
    - ./great_expectation_stores/docs:/usr/share/nginx/html
    ports:
    - "9090:80"
    environment:
    # - NGINX_HOST=foobar.com
    - NGINX_PORT=80
